spring.config.activate.on-profile=Docker

spring.banner.location=bannerDocker.txt

server.port=8080

# habilitar/desahabilitar api-doc swagfer-ui
springdoc.api-docs.enabled = true
springdoc.swagger-ui.enabled=true

# definir la ruta de swagger-ui
springdoc.swagger-ui.path=/doc/swagger-ui.html

# seleccionar paquetes, clases a escanear
#springdoc.packagesToScan=com.paquete1
# para que liste algunos endpoints en especifico
springdoc.pathsToMatch=/**, *
#Estrategia de generacion de
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update

#docker run --network mediapp-backend_default -e "DATABASE_URL=jdbc:postgresql://Java_db:5432/MediAppDbDocker" -e "DATABASE_USERNAME=postgres" -e "DATABASE_PASSWORD=postgres" mito_app:0.0.1